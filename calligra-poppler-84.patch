diff -up calligra-3.1.0/filters/karbon/pdf/PdfImport.cpp.omv~ calligra-3.1.0/filters/karbon/pdf/PdfImport.cpp
--- calligra-3.1.0/filters/karbon/pdf/PdfImport.cpp.omv~	2020-01-28 23:31:22.399371415 +0100
+++ calligra-3.1.0/filters/karbon/pdf/PdfImport.cpp	2020-01-28 23:32:14.107368906 +0100
@@ -60,19 +60,17 @@ KoFilter::ConversionStatus PdfImport::co
     }
 
     // read config file
-    globalParams = new GlobalParams();
+    globalParams = std::make_unique<GlobalParams>();
     if (! globalParams)
         return KoFilter::NotImplemented;
 
     GooString * fname = new GooString(QFile::encodeName(m_chain->inputFile()).data());
     PDFDoc * pdfDoc = new PDFDoc(fname, 0, 0, 0);
     if (! pdfDoc) {
-        delete globalParams;
         return KoFilter::StupidError;
     }
 
     if (! pdfDoc->isOk()) {
-        delete globalParams;
         delete pdfDoc;
         return KoFilter::StupidError;
     }
@@ -99,8 +97,6 @@ KoFilter::ConversionStatus PdfImport::co
 
     delete dev;
     delete pdfDoc;
-    delete globalParams;
-    globalParams = 0;
 
     return KoFilter::OK;
 }
diff -up calligra-3.1.0/CMakeLists.txt.omv~ calligra-3.1.0/CMakeLists.txt
--- calligra-3.1.0/CMakeLists.txt.omv~	2020-01-29 00:24:19.335217282 +0100
+++ calligra-3.1.0/CMakeLists.txt	2020-01-29 00:28:20.935205560 +0100
@@ -101,6 +101,8 @@ if(NOT DEFINED RELEASE_BUILD)
 endif()
 message(STATUS "Release build: ${RELEASE_BUILD}")
 
+set (CMAKE_CXX_STANDARD 17)
+
  ############
 #############
 ## Options ##
@@ -608,14 +610,6 @@ if (BUILD_VC)
             set(ADDITIONAL_VC_FLAGS "-Wabi -fabi-version=0 -ffp-contract=fast -fPIC")
         endif()
 
-        #Handle Vc master
-        if(Vc_COMPILER_IS_GCC OR Vc_COMPILER_IS_CLANG)
-            AddCompilerFlag("-std=c++11" _ok)
-            if(NOT _ok)
-                AddCompilerFlag("-std=c++0x" _ok)
-            endif()
-        endif()
-
         macro(ko_compile_for_all_implementations_no_scalar _objs _src)
         if(PACKAGERS_BUILD)
             vc_compile_for_all_implementations(${_objs} ${_src} FLAGS ${ADDITIONAL_VC_FLAGS} ONLY SSE2 SSSE3 SSE4_1 AVX AVX2+FMA+BMI2)
diff -up calligra-3.1.0/filters/karbon/pdf/SvgOutputDev.cpp.omv~ calligra-3.1.0/filters/karbon/pdf/SvgOutputDev.cpp
--- calligra-3.1.0/filters/karbon/pdf/SvgOutputDev.cpp.omv~	2020-01-29 00:22:53.368221452 +0100
+++ calligra-3.1.0/filters/karbon/pdf/SvgOutputDev.cpp	2020-01-29 00:23:28.742219736 +0100
@@ -172,7 +172,7 @@ void SvgOutputDev::eoFill(GfxState *stat
     *d->body << "/>" << endl;
 }
 
-QString SvgOutputDev::convertPath(GfxPath *path)
+QString SvgOutputDev::convertPath(const GfxPath *path)
 {
     if (! path)
         return QString();
@@ -405,7 +405,7 @@ void SvgOutputDev::drawString(GfxState *
     const char * p = s->c_str();
     int len = s->getLength();
     CharCode code;
-    Unicode *u = nullptr;
+    const Unicode *u = nullptr;
     int uLen;
     double dx, dy, originX, originY;
     while (len > 0) {
diff -up calligra-3.1.0/filters/karbon/pdf/SvgOutputDev.h.omv~ calligra-3.1.0/filters/karbon/pdf/SvgOutputDev.h
--- calligra-3.1.0/filters/karbon/pdf/SvgOutputDev.h.omv~	2020-01-29 00:23:30.532219649 +0100
+++ calligra-3.1.0/filters/karbon/pdf/SvgOutputDev.h	2020-01-29 00:23:35.507219408 +0100
@@ -82,7 +82,7 @@ public:
     /// Dumps content to svg file
     void dumpContent();
 private:
-    QString convertPath(GfxPath *path);
+    QString convertPath(const GfxPath *path);
     QString convertMatrix(const QMatrix &matrix);
     QString convertMatrix(const double * matrix);
     QString printFill();
diff -up calligra-3.1.0/filters/karbon/pdf/SvgOutputDev.cpp.omv~ calligra-3.1.0/filters/karbon/pdf/SvgOutputDev.cpp
--- calligra-3.1.0/filters/karbon/pdf/SvgOutputDev.cpp.omv~	2020-01-29 01:56:38.827948526 +0100
+++ calligra-3.1.0/filters/karbon/pdf/SvgOutputDev.cpp	2020-01-29 01:56:45.284948213 +0100
@@ -180,7 +180,7 @@ QString SvgOutputDev::convertPath(const
     QString output;
 
     for (int i = 0; i < path->getNumSubpaths(); ++i) {
-        GfxSubpath * subpath = path->getSubpath(i);
+        const GfxSubpath * subpath = path->getSubpath(i);
         if (subpath->getNumPoints() > 0) {
             output += QString("M%1 %2").arg(subpath->getX(0)).arg(subpath->getY(0));
             int j = 1;
diff -up calligra-3.1.0/filters/words/msword-odf/wv2/src/styles.cpp.omv~ calligra-3.1.0/filters/words/msword-odf/wv2/src/styles.cpp
--- calligra-3.1.0/filters/words/msword-odf/wv2/src/styles.cpp.omv~	2020-01-29 01:45:06.425982119 +0100
+++ calligra-3.1.0/filters/words/msword-odf/wv2/src/styles.cpp	2020-01-29 01:45:09.940981948 +0100
@@ -42,7 +42,7 @@ STD::STD()
 }
 
 STD::STD( U16 baseSize, U16 totalSize, OLEStreamReader* stream, bool preservePos )
-throw(InvalidFormatException)
+noexcept(false)
 {
     clearInternal();
     if (!read( baseSize, totalSize, stream, preservePos )) {
@@ -112,7 +112,7 @@ STD& STD::operator=( const STD& rhs )
 }
 
 bool STD::read( const U16 cbStd, const U16 stdfSize, OLEStreamReader* stream, bool preservePos )
-throw(InvalidFormatException)
+noexcept(false)
 {
     U16 shifterU16;
     S32 startOffset=stream->tell();  // address where the STD starts
@@ -938,7 +938,7 @@ void Style::mergeUpechpx( const Style* p
 }
 
 
-StyleSheet::StyleSheet( OLEStreamReader* tableStream, U32 fcStshf, U32 lcbStshf ) throw(InvalidFormatException)
+StyleSheet::StyleSheet( OLEStreamReader* tableStream, U32 fcStshf, U32 lcbStshf ) noexcept(false)
     : m_udsNum(0)
 {
     WordVersion version = Word8;
diff -up calligra-3.1.0/filters/words/msword-odf/wv2/src/styles.h.omv~ calligra-3.1.0/filters/words/msword-odf/wv2/src/styles.h
--- calligra-3.1.0/filters/words/msword-odf/wv2/src/styles.h.omv~	2020-01-29 01:42:13.751990496 +0100
+++ calligra-3.1.0/filters/words/msword-odf/wv2/src/styles.h	2020-01-29 01:42:25.544989924 +0100
@@ -59,7 +59,7 @@ struct STD
     /**
      * Simply calls read(...)
      */
-    STD( U16 stdfSize, U16 totalSize, OLEStreamReader* stream, bool preservePos = false ) throw(InvalidFormatException);
+    STD( U16 stdfSize, U16 totalSize, OLEStreamReader* stream, bool preservePos = false ) noexcept(false);
     /**
      * Attention: This struct allocates memory on the heap
      */
@@ -75,7 +75,7 @@ struct STD
      *
      * @return true - success, false - failed
      */
-    bool read( const U16 cbStd, const U16 stdfSize, OLEStreamReader* stream, bool preservePos = false ) throw(InvalidFormatException);
+    bool read( const U16 cbStd, const U16 stdfSize, OLEStreamReader* stream, bool preservePos = false ) noexcept(false);
 
     /**
      * Same as reading :)
@@ -365,7 +365,7 @@ private:
 class WV2_EXPORT StyleSheet
 {
 public:
-    StyleSheet( OLEStreamReader* tableStream, U32 fcStshf, U32 lcbStshf ) throw(InvalidFormatException);
+    StyleSheet( OLEStreamReader* tableStream, U32 fcStshf, U32 lcbStshf ) noexcept(false);
     ~StyleSheet();
 
     /**
